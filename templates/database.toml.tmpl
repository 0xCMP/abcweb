# Available database.toml configuration flags can be found in the ABCWeb readme.
# Environment modes here must match your environment modes in config.toml.
# The environment that is loaded can be set using:
# env field in config.toml or {{envAppName .AppName}}_ENV environment variable.
[dev]
	# valid values are postgres|mysql
	# db = "postgres"
	# If the user line is commented the database will not be connected to.
	# user = "username"
	pass = "password"
	dbname = "{{dbAppName .AppName}}_dev"
	host = "localhost"
	# SSLMode possible values:
	# Postgres: https://www.postgresql.org/docs/9.1/static/libpq-ssl.html
	# MySQL: https://github.com/go-sql-driver/mysql#tls
	sslmode = "require"
	
	# SQLBoiler (models generator) additional config
	# tables to ignore when generating models (migration tables, etc)
	blacklist = ["goose_db_version"]
[prod]
	# valid values are postgres|mysql
	# db = "postgres"
	# If the user line is commented the database will not be connected to.
	# user = "username"
	pass = "password"
	dbname = "{{dbAppName .AppName}}_prod"
	host = "localhost"
	# SSLMode possible values:
	# Postgres: https://www.postgresql.org/docs/9.1/static/libpq-ssl.html
	# MySQL: https://github.com/go-sql-driver/mysql#tls
	sslmode = "require"
	#
	# SQLBoiler (models generator) additional config
	# tables to ignore when generating models (migration tables, etc)
	blacklist = ["goose_db_version"]
[test]
	# The test segment defines the database to connect to when running unit
	# tests and when executing unit test migrations.
	# valid values are postgres|mysql
	# db = "postgres"
	# If the user line is commented the database will not be connected to
	# and the unit tests will not run migrations.
	# user = "username"
	pass = "password"
	dbname = "{{dbAppName .AppName}}_test"
	host = "localhost"
	# SSLMode possible values:
	# Postgres: https://www.postgresql.org/docs/9.1/static/libpq-ssl.html
	# MySQL: https://github.com/go-sql-driver/mysql#tls
	sslmode = "require"
	#
	# SQLBoiler (models generator) additional config
	# tables to ignore when generating models (migration tables, etc)
	blacklist = ["goose_db_version"]
