// modules
var gulp = require('gulp');
var rev = require('gulp-rev');
var es = require('event-stream');
var less = require('gulp-less');
var sass = require('gulp-sass');
var minifyJS = require('gulp-minify');
var minifyCSS = require('gulp-clean-css');

// paths 
paths = {
	src: __dirname + '/assets/',
	build: __dirname + '/public/assets/',
};

// The manifest file holds the mappings for the fingerprinted files,
// example: {"bootstrap.js": "js/bootstrap-82e1ab4c0.js"}
var manifestBase = 'public/assets';
var manifestPath = manifestBase + '/manifest.json';

// generic fingerprints and moves the regular and vendor assets of the passed in type.
function generic(asset, pattern) {
	if (typeof pattern === 'undefined') {
		pattern = '/**/*'
	}

	return gulp.src([
		paths.src + asset + pattern,
		paths.src + 'vendor/' + asset + pattern,
	]).pipe(rev()) // fingerprint files
		.pipe(gulp.dest(paths.build + asset)) // write fingerprinted files
		.pipe(rev.manifest(manifestPath, {merge: true, base: manifestBase}))
		.pipe(gulp.dest(paths.build)); // write manifest file
}

// Default task executes all tasks. Add new tasks here as you create them.
gulp.task('default', ['css', 'fonts', 'js', 'img', 'video', 'audio']);

// CSS precompile (less & sass), minify and fingerprint
gulp.task('css', function() {
	es.merge(
		gulp.src([paths.src + 'css/**/*.scss', paths.src + 'css/**/*.sass']).pipe(sass()),
		gulp.src(paths.src + 'css/**/*.less').pipe(less()),
		gulp.src(paths.src + 'css/**/*.css')
	).pipe(minifyCSS()) // minify files
		.pipe(rev()) // fingerprint files
		.pipe(gulp.dest(paths.build + 'css')) // write compiled, minified and fingerprinted files
		.pipe(rev.manifest(manifestPath, {merge: true, base: manifestBase})) 
		.pipe(gulp.dest(paths.build)); // write manifest file

	return generic('css', '/**/*.!(*(*.)css|*(*.)less|*(*.)scss|*(*.)sass)') 
});

gulp.task('js', function() {
	gulp.src(paths.src + 'js/**/*.js')
		.pipe(minifyJS({noSource: true, ext: {min: '.js'}})) // minify files
		.pipe(rev()) // fingerprint files
		.pipe(gulp.dest(paths.build + 'js')) // write minified and fingerprinted files
		.pipe(rev.manifest(manifestPath, {merge: true, base: manifestBase}))
		.pipe(gulp.dest(paths.build)); // write manifest file

	return generic('js', '/**/*.!(*(*.)js)')
});

gulp.task('img', function() {
	return generic('img')
});

gulp.task('fonts', function() {
	return generic('fonts')
});

gulp.task('video', function() {
	return generic('video')
});

gulp.task('audio', function() {
	return generic('audio')
});
