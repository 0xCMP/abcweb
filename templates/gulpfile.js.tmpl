// modules
var gulp = require('gulp');
var rev = require('gulp-rev');
var es = require('event-stream');
var less = require('gulp-less');
var sass = require('gulp-sass');
var minifyJS = require('gulp-minify');
var minifyCSS = require('gulp-clean-css');

// paths 
paths = {
	src: __dirname + '/assets/',
	build: __dirname + '/public/assets/',
};

var manifestBase = 'public/assets';
var manifestPath = manifestBase + '/manifest.json';

// Default task executes all tasks
gulp.task('default', ['css', 'fonts', 'js', 'img', 'video', 'audio']);

// CSS precompile (less & sass), minify and fingerprint
gulp.task('css', function() {
	es.merge(
		gulp.src([paths.src + 'css/*.scss', paths.src + 'css/*.sass']).pipe(sass()),
		gulp.src(paths.src + 'css/*.less').pipe(less()),
		gulp.src(paths.src + 'css/*.css')
	).pipe(minifyCSS()) // minify files
		.pipe(rev()) // fingerprint files
		.pipe(gulp.dest(paths.build + 'css')) // write compiled, minified and fingerprinted files
		.pipe(rev.manifest(manifestPath, {
			merge: true,
			base: manifestBase
		}))
		.pipe(gulp.dest(paths.build)); // write manifest file

	// fingerprint and move files with non-standard extensions
	return gulp.src(paths.src + 'css/*.!(css|less|scss|sass)')
		.pipe(rev())
		.pipe(gulp.dest(paths.build + 'css'))
		.pipe(rev.manifest(manifestPath, {
			merge: true,
			base: manifestBase
		}))
		.pipe(gulp.dest(paths.build));
});

gulp.task('js', function() {

});

gulp.task('img', function() {

});

gulp.task('fonts', function() {

});

gulp.task('video', function() {

});

gulp.task('audio', function() {

});

// Fingerprint assets
function fingerprint() {

}
